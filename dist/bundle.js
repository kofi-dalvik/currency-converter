/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/idb/lib/idb.js":
/*!*************************************!*\
  !*** ./node_modules/idb/lib/idb.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function (resolve, reject) {\n      request.onsuccess = function () {\n        resolve(request.result);\n      };\n\n      request.onerror = function () {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function (resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function (value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function (prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function get() {\n          return this[targetProp][prop];\n        },\n        set: function set(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function (prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function () {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function (prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function () {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function (prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function () {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', ['name', 'keyPath', 'multiEntry', 'unique']);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, ['get', 'getKey', 'getAll', 'getAllKeys', 'count']);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, ['openCursor', 'openKeyCursor']);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', ['direction', 'key', 'primaryKey', 'value']);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, ['update', 'delete']);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function (methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function () {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function () {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function (value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function () {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function () {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', ['name', 'keyPath', 'indexNames', 'autoIncrement']);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, ['put', 'add', 'delete', 'clear', 'get', 'getAll', 'getKey', 'getAllKeys', 'count']);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, ['openCursor', 'openKeyCursor']);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, ['deleteIndex']);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function (resolve, reject) {\n      idbTransaction.oncomplete = function () {\n        resolve();\n      };\n      idbTransaction.onerror = function () {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function () {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function () {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', ['objectStoreNames', 'mode']);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, ['abort']);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function () {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', ['name', 'version', 'objectStoreNames']);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, ['deleteObjectStore', 'close']);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function () {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', ['name', 'version', 'objectStoreNames']);\n\n  proxyMethods(DB, '_db', IDBDatabase, ['close']);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function (funcName) {\n    [ObjectStore, Index].forEach(function (Constructor) {\n      // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n      if (!(funcName in Constructor.prototype)) return;\n\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function () {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function () {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function (Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function (query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function (resolve) {\n        instance.iterateCursor(query, function (cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function open(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      if (request) {\n        request.onupgradeneeded = function (event) {\n          if (upgradeCallback) {\n            upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n          }\n        };\n      }\n\n      return p.then(function (db) {\n        return new DB(db);\n      });\n    },\n    delete: function _delete(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (true) {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  } else {}\n})();\n\n//# sourceURL=webpack:///./node_modules/idb/lib/idb.js?");

/***/ }),

/***/ "./public/js/api.js":
/*!**************************!*\
  !*** ./public/js/api.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _helpers = __webpack_require__(/*! ./helpers */ \"./public/js/helpers.js\");\n\nvar _indexDB = __webpack_require__(/*! ./indexDB */ \"./public/js/indexDB.js\");\n\nvar _indexDB2 = _interopRequireDefault(_indexDB);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n\n    /**\r\n     * @description fetches all currencies\r\n     * this will only be called once in a particular browser\r\n     */\n    fetchAllCurrencies: function fetchAllCurrencies() {\n        /** make request to get all currencies */\n        fetch('https://free.currencyconverterapi.com/api/v5/currencies').then(function (response) {\n            //parse response data to json\n            return response.json();\n        }).then(function (currencies) {\n            (0, _helpers.displayCurrencies)(currencies);\n            //add this to database\n            _indexDB2.default.setCurrencies(currencies);\n        }).catch(function (error) {\n            console.log(error);\n        });\n    },\n\n\n    /**\r\n     * @description gets the rate between 2 currencies and converts it\r\n     * \r\n     */\n    convertCurrency: function convertCurrency(_ref, toValue) {\n        var relation = _ref.relation,\n            value = _ref.value;\n\n        /** show progressIndicator */\n        (0, _helpers.toggleProgressIndicator)();\n        /** remove the green backgroun of the result text input */\n        toValue.className = '';\n        /** fetch rate between give currencies in the ralation */\n        fetch('https://free.currencyconverterapi.com/api/v5/convert?q=' + relation + '&compact=ultra').then(function (response) {\n            /** on request completion, hide progressIndicator */\n            (0, _helpers.toggleProgressIndicator)();\n            /** resolve response to json */\n            return response.json();\n        }).then(function (data) {\n            /** compute the convertion with the rate and show value to user */\n            (0, _helpers.displayConversion)({ rate: data[relation], value: value }, toValue);\n            //add newly fetched rate to db\n            _indexDB2.default.addRate(relation, data[relation]).then(function () {\n                return console.log('rate added');\n            }).catch(function () {\n                return console.log('add rate failed');\n            });\n        }).catch(function (error) {\n            console.log(error);\n            /** if request not sent, hide progressIndicator */\n            (0, _helpers.toggleProgressIndicator)();\n        });\n    }\n};\n\n//# sourceURL=webpack:///./public/js/api.js?");

/***/ }),

/***/ "./public/js/app.js":
/*!**************************!*\
  !*** ./public/js/app.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }(); /** importing api methods, these methods makes http requests */\n\n\n/** importing utility functions, most of which are dom manipulating functions */\n\n\nvar _api = __webpack_require__(/*! ./api */ \"./public/js/api.js\");\n\nvar _api2 = _interopRequireDefault(_api);\n\nvar _indexDB = __webpack_require__(/*! ./indexDB */ \"./public/js/indexDB.js\");\n\nvar _indexDB2 = _interopRequireDefault(_indexDB);\n\nvar _helpers = __webpack_require__(/*! ./helpers */ \"./public/js/helpers.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** when ready, we fetch all currencies and populate the select inputs with currencies */\nwindow.onload = function (event) {\n\n    /** registering service worker first*/\n    registerServiceWorker();\n\n    /** fetch currencies if not in db */\n    _indexDB2.default.getCurrencies().then(function (val) {\n        if (!val) {\n            //reach out to network\n            _api2.default.fetchAllCurrencies();\n        } else {\n            //display data from indexedDB\n            (0, _helpers.displayCurrencies)(val);\n        }\n    });\n\n    /** these are dom elements we are going to use very frequently\r\n     * getting them here will help reduce having to repeat codes accross modules\r\n    */\n\n    var _document$getElements = document.getElementsByClassName('convert'),\n        _document$getElements2 = _slicedToArray(_document$getElements, 1),\n        convert = _document$getElements2[0];\n\n    var _document$getElements3 = document.getElementsByTagName('select'),\n        _document$getElements4 = _slicedToArray(_document$getElements3, 2),\n        fromType = _document$getElements4[0],\n        toType = _document$getElements4[1];\n\n    var _document$getElements5 = document.getElementsByTagName('input'),\n        _document$getElements6 = _slicedToArray(_document$getElements5, 2),\n        fromValue = _document$getElements6[0],\n        toValue = _document$getElements6[1];\n\n    var _document$getElements7 = document.getElementsByClassName('link'),\n        _document$getElements8 = _slicedToArray(_document$getElements7, 1),\n        flipButton = _document$getElements8[0];\n\n    /**\r\n     * flips the currency conversions\r\n     */\n\n\n    flipButton.addEventListener('click', function (event) {\n        event.preventDefault();\n        var temp = fromType.value;\n        fromType.value = toType.value;\n        toType.value = temp;\n    });\n\n    /** \r\n     * event listener to converts currencies\r\n     */\n    convert.addEventListener('click', function (event) {\n\n        //validate the form data, make sure all inputs are set\n        var valid = (0, _helpers.validateData)(fromValue, fromType, toType, toValue);\n\n        //if form is valid, and not of the same currency conversion\n        if (valid && !valid.sameCurrency) {\n            var to = valid.to,\n                from = valid.from,\n                value = valid.value;\n\n            //the query paramter, the ralation between the two currencies\n\n            var relation = [from, to].join('_');\n\n            //find if rate has already been added to db\n            //this findRate method implemented in indexDB class will find the reverse rate if the rate does not exist\n            _indexDB2.default.findRate(relation).then(function (rate) {\n                //displaying result to the user\n                (0, _helpers.displayConversion)({ rate: rate, value: value }, toValue);\n            }).catch(function () {\n                //rate is not found so reaching out to network\n                //once rate is obtained, it will be added to db\n                _api2.default.convertCurrency({ relation: relation, value: value }, toValue);\n            });\n        }\n    });\n\n    /**\r\n     * event listener for change to currency type\r\n     * clear the class on the select element\r\n     */\n    toType.addEventListener('change', function (event) {\n        if (event.target.value !== fromType.value) {\n            toValue.className = '';\n            toValue.value = '';\n        }\n    });\n};\n\n/**\r\n * this registers the service worker\r\n */\nvar registerServiceWorker = function registerServiceWorker() {\n    if (navigator.serviceWorker) {\n        navigator.serviceWorker.register('/sw.js').then(function (registration) {\n            navigator.serviceWorker.addEventListener('controllerchange', function (event) {\n                //reloading browser when new worker is installed\n                window.location.reload();\n            });\n        }).catch(function () {\n            console.log('sw not registered');\n        });\n    }\n};\n\n//# sourceURL=webpack:///./public/js/app.js?");

/***/ }),

/***/ "./public/js/helpers.js":
/*!******************************!*\
  !*** ./public/js/helpers.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\n/**\r\n * @description toggles the visibility of the progress indicator\r\n */\nvar toggleProgressIndicator = exports.toggleProgressIndicator = function toggleProgressIndicator() {\n\n    /** get the progress indicator */\n    var _document$getElements = document.getElementsByClassName('progress'),\n        _document$getElements2 = _slicedToArray(_document$getElements, 1),\n        progressIndicator = _document$getElements2[0];\n\n    /** check if progress indicator's display property is none then set to flex, else set to none */\n\n\n    if (progressIndicator.style.display === 'none' || progressIndicator.style.display === '') {\n        progressIndicator.style.display = 'flex';\n    } else {\n        progressIndicator.style.display = 'none';\n    }\n};\n\n/**\r\n * @description changes the text and color for a given Dom node\r\n * @param {DOM} el \r\n * @param {String} message \r\n * @param {Boolean} error \r\n */\nvar errorLabel = function errorLabel(el, message, error) {\n    el.innerText = message + ':';\n    el.style.color = error ? 'red' : '';\n};\n\n/**\r\n * @description validates dom input values \r\n * @param {DOM} fromValue \r\n * @param {DOM} fromType \r\n * @param {DOM} toType \r\n * @param {DOM} toValue \r\n */\nvar validateData = exports.validateData = function validateData(fromValue, fromType, toType, toValue) {\n\n    var fromValueLable = fromValue.parentElement.firstElementChild,\n        fromTypeLabel = fromType.parentElement.firstElementChild,\n        toTypeLable = toType.parentElement.firstElementChild;\n    var response = null;\n\n    if (!fromValue.value) {\n        errorLabel(fromValueLable, 'The amount to convert is required', true);\n        return false;\n    } else if (!/^(\\d*\\.)?\\d+$/.test(fromValue.value)) {\n        errorLabel(fromValueLable, 'A valid number is required', true);\n        return false;\n    } else {\n        errorLabel(fromValueLable, 'Amount I have', false);\n    }\n\n    if (!fromType.value) {\n        errorLabel(fromTypeLabel, 'Select Currency to convert', true);\n        return false;\n    } else {\n        errorLabel(fromTypeLabel, 'Currency I have', false);\n    }\n\n    if (!toType.value) {\n        errorLabel(toTypeLable, 'Select Currency to convert to', true);\n        return false;\n    } else {\n        errorLabel(toTypeLable, 'Currency I want', false);\n    }\n\n    if (fromType.value === toType.value) {\n        toValue.value = fromValue.value;\n        toValue.className = toValue.className + ' ok';\n    } else {\n        toValue.className = '';\n    }\n\n    return {\n        sameCurrency: fromType.value === toType.value,\n        from: fromType.value,\n        to: toType.value,\n        value: fromValue.value\n    };\n};\n\n/**\r\n * @description displays currencies into the select boxes\r\n * @param {JSON} currencies \r\n */\nvar displayCurrencies = exports.displayCurrencies = function displayCurrencies(currencies) {\n    var _document$getElements3 = document.getElementsByTagName('select'),\n        _document$getElements4 = _slicedToArray(_document$getElements3, 2),\n        fromType = _document$getElements4[0],\n        toType = _document$getElements4[1];\n\n    /**\r\n    * currencies does not implement iteratable protocol\r\n    * so makeIterable() function converts the object into array\r\n    * makeIterable() also sorts the currencies into alphabetical order\r\n    */\n\n\n    currencies = makeIterable(currencies.results);\n\n    /** with each currency */\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = currencies[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var item = _step.value;\n\n\n            /** create option element */\n            var option = document.createElement('option');\n\n            /** set properties of the element */\n            var id = item.id,\n                currencyName = item.currencyName,\n                currencySymbol = item.currencySymbol;\n\n            option.value = id;\n\n            //replace currency symbol with ' ' if not exist. otherwise it will be undefined\n            option.innerText = id + ' - ' + currencyName + ' - ' + (currencySymbol || '');\n\n            /** append option elements to dom */\n            fromType.appendChild(option);\n            toType.appendChild(option.cloneNode(true));\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n};\n\n/**\r\n * @description parses currency object into array and sorts the array\r\n * bases on currencyname property. This makes it easy for the user\r\n * @param {Object} data\r\n * @returns Array of sorted currencies\r\n */\nvar makeIterable = exports.makeIterable = function makeIterable(data) {\n\n    /** convert object into iterable array */\n    var iterable = [];\n\n    for (var key in data) {\n\n        iterable.push(data[key]);\n    }\n\n    /** sort iterable */\n    iterable.sort(function (a, b) {\n\n        if (a.currencyName < b.currencyName) return -1;\n\n        if (a.currencyName > b.currencyName) return 1;\n\n        return 0;\n    });\n\n    // console.log(iterable)\n\n    return iterable;\n};\n\n/**\r\n * @description converts between two currencies and displays the values\r\n */\nvar displayConversion = exports.displayConversion = function displayConversion(_ref, resultInput) {\n    var rate = _ref.rate,\n        value = _ref.value;\n\n    resultInput.value = Number(value * rate).toFixed(4);\n    resultInput.className = 'ok';\n};\n\n//# sourceURL=webpack:///./public/js/helpers.js?");

/***/ }),

/***/ "./public/js/indexDB.js":
/*!******************************!*\
  !*** ./public/js/indexDB.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _idb = __webpack_require__(/*! idb */ \"./node_modules/idb/lib/idb.js\");\n\nvar _idb2 = _interopRequireDefault(_idb);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar IndexDB = function () {\n    //constructor creates the db\n    function IndexDB() {\n        _classCallCheck(this, IndexDB);\n\n        this._db = _idb2.default.open('currency-converter', 1, function (upgradeDB) {\n            var store = upgradeDB.createObjectStore('cc-key-val');\n            store.put('0.265', 'USD_GHS');\n        });\n    }\n\n    /**\r\n     * @description this gets the stored currencies within indexDB\r\n     */\n\n\n    _createClass(IndexDB, [{\n        key: 'getCurrencies',\n        value: function getCurrencies() {\n            var _this = this;\n\n            return new Promise(function (resolve, reject) {\n                _this._db.then(function (db) {\n                    var transaction = db.transaction('cc-key-val');\n                    var store = transaction.objectStore('cc-key-val');\n                    return store.get('currencies');\n                }).then(function (val) {\n                    resolve(val);\n                });\n            });\n        }\n\n        /**\r\n         * @description puts the downloaded currencies into the db\r\n         * @param {json} currencies \r\n         */\n\n    }, {\n        key: 'setCurrencies',\n        value: function setCurrencies(currencies) {\n            var _this2 = this;\n\n            return new Promise(function (resolve, reject) {\n                _this2._db.then(function (db) {\n                    var transaction = db.transaction('cc-key-val', 'readwrite');\n                    var store = transaction.objectStore('cc-key-val');\n                    store.put(currencies, 'currencies');\n                    return transaction.complete;\n                }).then(function () {\n                    return resolve(true);\n                }).catch(function () {\n                    return reject(null);\n                });\n            });\n        }\n\n        /**\r\n         * @description adds a newly downloaded rate to the db\r\n         * @param {string} key \r\n         * @param {number} value \r\n         */\n\n    }, {\n        key: 'addRate',\n        value: function addRate(key, value) {\n            var _this3 = this;\n\n            return new Promise(function (resolve, reject) {\n                _this3._db.then(function (db) {\n                    var transaction = db.transaction('cc-key-val', 'readwrite');\n                    var store = transaction.objectStore('cc-key-val');\n                    store.put(value, key);\n                    return transaction.complete;\n                }).then(function () {\n                    return resolve(true);\n                }).catch(function () {\n                    return reject(null);\n                });\n            });\n        }\n\n        /**\r\n         * @description finds a given rate from the db. if rate not found it finds\r\n         * the reverse rate next, if that also not found then it rejects\r\n         * @param {string} key \r\n         */\n\n    }, {\n        key: 'findRate',\n        value: function findRate(key) {\n            var _this4 = this;\n\n            return new Promise(function (resolve, reject) {\n                _this4._db.then(function (db) {\n                    //create transaction\n                    var transaction = db.transaction('cc-key-val');\n                    var store = transaction.objectStore('cc-key-val');\n                    //create reverse ralation\n                    //eg relation: USD_EUR will reverse to give EUR_USD\n                    var reversekey = key.split('_').reverse().join('_');\n\n                    //this promises will resolve to defined and undefined data\n                    return Promise.all([store.get(key), store.get(reversekey)]);\n                }).then(function (val) {\n                    //if first value is defined, then its the rate, resolve the rate\n                    if (val[0] && !val[1]) {\n                        resolve(val[0]);\n                    } else if (!val[0] && val[1]) {\n                        //if second value is defined, then resolve the invert the rate\n                        resolve(1 / val[1]);\n                    } else {\n                        reject(false);\n                    }\n                });\n            });\n        }\n    }]);\n\n    return IndexDB;\n}();\n\n//finally, export an instance of this class\n\n\nexports.default = new IndexDB();\n\n//# sourceURL=webpack:///./public/js/indexDB.js?");

/***/ }),

/***/ 0:
/*!********************************!*\
  !*** multi ./public/js/app.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./public/js/app.js */\"./public/js/app.js\");\n\n\n//# sourceURL=webpack:///multi_./public/js/app.js?");

/***/ })

/******/ });